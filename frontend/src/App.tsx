// frontend/src/App.tsx
import React, { useState, useEffect, useCallback } from 'react';
import axios from 'axios';
import { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';

import Home from './Home';
import DistanceStats from './DistanceStats';
import PaceStats from './PaceStats';
import AllActivities from './AllActivities';
import PerformancePlot from './PerformancePlot';
import TrainingPreparation from './TrainingPreparation'; 
import TempoStats from './TempoStats';
import WeeklyActivity from './WeeklyActivity';
// ----------------------------

// --- Interface Data Global ---
export interface Activity {
Â  Â  id: number;
Â  Â  name: string;
Â  Â  distance: number; // Dalam meter
Â  Â  moving_time: number; // Dalam detik
Â  Â  type: string;
Â  Â  start_date: string;
Â  Â  average_heartrate: number;
}

export interface MonthlySportStats {
Â  Â  month_year: string;
Â  Â  run_walk_hike: number;
Â  Â  bike: number;
Â  Â  other: number;
}

export interface MonthlyPaceStats { 
Â  Â  month_year: string;
Â  Â  // Pace Rata-rata dalam detik/meter (s/m)
Â  Â  run_walk_hike_pace: number; 
Â  Â  bike_pace: number; 
Â  Â  other_pace: number;
Â  Â  // Total distance diperlukan untuk tabel ringkasan
Â  Â  run_walk_hike_distance: number; 
Â  Â  bike_distance: number;
Â  Â  other_distance: number;
}

export interface CategoryTableProps { 
Â  Â  stats: any; 
Â  Â  categoryKey: string; 
Â  Â  title: string;
}
// ---------------------------------

export const BACKEND_URL = 'http://localhost:8080';

// --- STYLES UNTUK FIXED HEADER ---

const headerStyle: React.CSSProperties = {
Â  Â  position: 'fixed', 
Â  Â  top: 0,
Â  Â  left: 0,
Â  Â  width: '100%',
Â  Â  backgroundColor: '#ffffff',
Â  Â  borderBottom: '3px solid #e95420',
Â  Â  padding: '10px 30px',
Â  Â  boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',
Â  Â  zIndex: 1000,
};

const titleStyle: React.CSSProperties = {
Â  Â  margin: '0',
Â  Â  fontSize: '2em',
Â  Â  color: '#2c2f33'
};

const statusStyle: React.CSSProperties = {
Â  Â  fontSize: '0.9em',
Â  Â  color: '#666',
Â  Â  margin: '5px 0 10px 0',
};

const navContainerStyle: React.CSSProperties = {
Â  Â  display: 'flex',
Â  Â  gap: '25px',
Â  Â  marginTop: '10px',
Â  Â  paddingTop: '5px'
};

const linkStyle: React.CSSProperties = {
Â  Â  textDecoration: 'none',
Â  Â  color: '#e95420',
Â  Â  fontWeight: 'bold',
Â  Â  fontSize: '1.1em',
Â  Â  transition: 'color 0.2s',
};

const mainContentStyle: React.CSSProperties = {
Â  Â  marginTop: '150px', 
Â  Â  padding: '20px 30px',
};


const App: React.FC = () => {
Â  Â  const [backendStatus, setBackendStatus] = useState<string>('Checking backend...');
Â  Â  const [accessToken, setAccessToken] = useState<string | null>(null);
Â  Â  const [activities, setActivities] = useState<Activity[]>([]);
Â  Â  const [monthlyStats, setMonthlyStats] = useState<MonthlySportStats[]>([]);
Â  Â  const [monthlyPaceStats, setMonthlyPaceStats] = useState<MonthlyPaceStats[]>([]);
Â  Â  const [loading, setLoading] = useState<boolean>(false);

Â  Â  // Fungsi fetchStats dan fetchActivities (dibiarkan tetap)
Â  Â  const fetchStats = useCallback(async () => {
Â  Â  Â  Â  try {
Â  Â  Â  Â  Â  Â  const [statsRes, paceRes] = await Promise.all([
Â  Â  Â  Â  Â  Â  Â  Â  axios.get<MonthlySportStats[]>(`${BACKEND_URL}/api/stats`), 
Â  Â  Â  Â  Â  Â  Â  Â  axios.get<MonthlyPaceStats[]>(`${BACKEND_URL}/api/pace-stats`)
Â  Â  Â  Â  Â  Â  ]);
Â  Â  Â  Â  Â  Â  setMonthlyStats(statsRes.data);
Â  Â  Â  Â  Â  Â  setMonthlyPaceStats(paceRes.data);
Â  Â  Â  Â  Â  Â  console.log("Statistik Jarak dan Pace berhasil dimuat.");
Â  Â  Â  Â  } catch (error) {
Â  Â  Â  Â  Â  Â  console.error("Gagal mengambil statistik:", error);
Â  Â  Â  Â  }
Â  Â  }, []);

Â  Â  const fetchActivities = useCallback(async (isRefresh: boolean, tokenOverride?: string | null) => {
Â  Â  Â  Â  const token = tokenOverride || accessToken;
Â  Â  Â  Â  if (!token) return;
Â  Â  Â  Â  
Â  Â  Â  Â  localStorage.setItem('strava_token', token);
Â  Â  Â  Â  setLoading(true);
Â  Â  Â  Â  try {
Â  Â  Â  Â  Â  Â  let url = `${BACKEND_URL}/api/activities`;
Â  Â  Â  Â  Â  Â  if (isRefresh) {
Â  Â  Â  Â  Â  Â  Â  Â  url = `${BACKEND_URL}/api/activities?refresh=true&token=${token}`;
Â  Â  Â  Â  Â  Â  } else if (token) {
Â  Â  Â  Â  Â  Â  Â  Â  url = `${BACKEND_URL}/api/activities?token=${token}`;
Â  Â  Â  Â  Â  Â  }

Â  Â  Â  Â  Â  Â  const response = await axios.get(url);
Â  Â  Â  Â  Â  Â  setActivities(response.data as Activity[]);
Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  await fetchStats(); 
Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  if (isRefresh) {
Â  Â  Â  Â  Â  Â  Â  Â  console.log(`Berhasil me-refresh data. Total ${response.data.length} aktivitas tersimpan.`);
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  } catch (error) {
Â  Â  Â  Â  Â  Â  console.error("Gagal mengambil data dari Strava:", error);
Â  Â  Â  Â  Â  Â  console.error("Gagal mengambil data. Token mungkin kedaluwarsa atau server backend bermasalah.");
Â  Â  Â  Â  } finally {
Â  Â  Â  Â  Â  Â  setLoading(false);
Â  Â  Â  Â  }
Â  Â  }, [accessToken, fetchStats]); 

Â  Â  // Hooks untuk Inisialisasi
Â  Â  useEffect(() => {
Â  Â  Â  Â  axios.get(`${BACKEND_URL}/api/status`)
Â  Â  Â  Â  Â  Â  .then(res => setBackendStatus(res.data.status))
Â  Â  Â  Â  Â  Â  .catch(() => setBackendStatus(`Error: Pastikan Go Server berjalan di ${BACKEND_URL}!`));

Â  Â  Â  Â  const params = new URLSearchParams(window.location.search);
Â  Â  Â  Â  const token = params.get('token');

Â  Â  Â  Â  if (token) {
Â  Â  Â  Â  Â  Â  setAccessToken(token);
Â  Â  Â  Â  Â  Â  window.history.replaceState({}, document.title, window.location.pathname);
Â  Â  Â  Â  Â  Â  fetchActivities(false, token);
Â  Â  Â  Â  } else if (localStorage.getItem('strava_token')) {
Â  Â  Â  Â  Â  Â  const storedToken = localStorage.getItem('strava_token');
Â  Â  Â  Â  Â  Â  setAccessToken(storedToken);
Â  Â  Â  Â  Â  Â  fetchActivities(false, storedToken);
Â  Â  Â  Â  }
Â  Â  }, [fetchActivities]);

Â  Â  // --- Render Fixed Header dan Router ---
Â  Â  return (
Â  Â  Â  Â  <div style={{ padding: 0 }}> 
Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  {/* FIXED HEADER */}
Â  Â  Â  Â  Â  Â  <header style={headerStyle}>
Â  Â  Â  Â  Â  Â  Â  Â  <h1 style={titleStyle}>Strava Monitor App</h1>
Â  Â  Â  Â  Â  Â  Â  Â  {/* <p style={statusStyle}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Backend Status: <strong>{backendStatus}</strong>
Â  Â  Â  Â  Â  Â  Â  Â  </p> */}

Â  Â  Â  Â  Â  Â  Â  Â  {/* Navigation */}
Â  Â  Â  Â  Â  Â  Â  Â  {accessToken && (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <nav style={navContainerStyle}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* Menggunakan Link dari react-router-dom */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Link to="/" style={linkStyle}>Home & Sync</Link>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Link to="/activities" style={linkStyle}>All Activities</Link> 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Link to="/stats/distance" style={linkStyle}>Distance Stats</Link>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Link to="/stats/pace" style={linkStyle}>Pace Stats</Link>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Link to="/plot/performance" style={linkStyle}>Performance Plot</Link>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Link to="/preparation" style={linkStyle}>Training Preparation</Link> 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Link to="/stats/tempo" style={linkStyle}>Tempo Stats</Link> 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Link to="/stats/weekly-pace" style={linkStyle}>Weekly Activity</Link> {/* ðŸŒŸ BARU: Link untuk Aktivitas Mingguan */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </nav>
Â  Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  </header>

Â  Â  Â  Â  Â  Â  {/* MAIN CONTENT (Diberi margin-top agar tidak tertutup header) */}
Â  Â  Â  Â  Â  Â  <main style={mainContentStyle}>
Â  Â  Â  Â  Â  Â  Â  Â  <Routes>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Route 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  path="/" 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  element={
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Home 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  accessToken={accessToken} 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  loading={loading} 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  fetchActivities={fetchActivities} 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  } 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Route 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  path="/activities" 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  element={
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <AllActivities 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  activities={activities} 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  } 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Route 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  path="/stats/distance" 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  element={
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <DistanceStats 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  activities={activities} 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  monthlyStats={monthlyStats} 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  } 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Route 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  path="/stats/pace" 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  element={
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <PaceStats 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  monthlyPaceStats={monthlyPaceStats} 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  } 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Route 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  path="/plot/performance" 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  element={
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <PerformancePlot 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  activities={activities} // Melewatkan semua aktivitas
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  } 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* Rute untuk Training Preparation */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Route 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  path="/preparation" 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  element={
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <TrainingPreparation
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  activities={activities}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* Rute untuk Tempo Stats */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Route 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  path="/stats/tempo" 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  element={
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <TempoStats
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  activities={activities}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* ðŸŒŸ Rute BARU: Aktivitas per Minggu */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Route 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  path="/stats/weekly-pace" 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  element={<WeeklyActivity />} 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  </Routes>
Â  Â  Â  Â  Â  Â  </main>
Â  Â  Â  Â  </div>
Â  Â  );
};

export default App;